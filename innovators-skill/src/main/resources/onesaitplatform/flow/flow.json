[{"id":"10c28de.2cd9272","type":"tab","label":"PCR","disabled":false,"info":""},{"id":"b72db542.45a0d8","type":"onesaitplatform api rest","z":"10c28de.2cd9272","name":"pcr","description":"api","public":false,"category":"ALL","authentication":"YWxleGE6UEVSbllHQnRmYVpzYTgxL01XWGpGbElkQ1FMR0RPalZtZ1A3MXJKcWh3OD06b25lc2FpdHBsYXRmb3JtX2NvbmZpZw==","x":70,"y":80,"wires":[["f59dcbff.f02f88"]]},{"id":"f59dcbff.f02f88","type":"onesaitplatform api rest operation","z":"10c28de.2cd9272","name":"PCR","description":"pcr","url":"/f59dcbfff02f88/","apiUrl":"/","method":"post","upload":false,"queryParams":"","swaggerDoc":"","x":150,"y":120,"wires":[["c354f455.b619e8"]]},{"id":"c354f455.b619e8","type":"function","z":"10c28de.2cd9272","name":"Meetings","func":"var queryParam=msg.payload.user;\n\n//Nos llevamos el usuario que pregunta por los contagios\nmsg.user = queryParam;\n//Traemos los miembros de todas las reuniones que ha habido desde hace 14 dias\nmsg.query=\"SELECT c.members FROM Meetings AS c where TIMESTAMP(c.date) <= TIMESTAMP('\" + new Date(Date.now()).toISOString()  + \"') and TIMESTAMP(c.date) >= TIMESTAMP('\" + new Date(Date.now() - 1209600000).toISOString()  + \"') and c.building!=''\"\nmsg.ontology=\"Meetings\";\nmsg.queryType=\"SQL\";\n\nreturn msg;","outputs":1,"noerr":0,"x":240,"y":180,"wires":[["3f9b0ad2.0b6c86"]]},{"id":"cdd192d.76f097","type":"onesaitplatform api rest operation response","z":"10c28de.2cd9272","name":"retun results","statusCode":"","headers":{},"x":1030,"y":440,"wires":[]},{"id":"3f9b0ad2.0b6c86","type":"onesaitplatform-query-dynamic","z":"10c28de.2cd9272","name":"query meeting members","authentication":"YWxleGE6UEVSbllHQnRmYVpzYTgxL01XWGpGbElkQ1FMR0RPalZtZ1A3MXJKcWh3OD06b25lc2FpdHBsYXRmb3JtX2NvbmZpZw==","x":370,"y":220,"wires":[["68e2a097.d6368"]]},{"id":"68e2a097.d6368","type":"function","z":"10c28de.2cd9272","name":"Users","func":"var user=msg.user;\nvar ppl = [];\nvar x\nvar y\nvar or_expresion = \"\";\n\n//Concatenamos todos los miembros de las reuniones en un unico array y eliminamos en las que el usuario que pregunta no ha estado\nfor (x of JSON.parse(msg.payload)) {\n    if (x.value.indexOf(user) != -1){\n        ppl = ppl.concat(x.value);\n    }\n}\n\n//Eliminamos duplicados\nconst unique_ppl = ppl.filter((el, index) => ppl.indexOf(el) === index)\n\n//Eliminamos a la persona que est√° preguntando\nremoveItemFromArr( unique_ppl, user );\n\n//Creamos parte la expresion SQL\n//for (y of unique_ppl){\n  //  or_expresion=or_expresion.concat(\"c.fullName='\" + y + \"' or \")\n//}\n\nunique_ppl.forEach(function(user,i){\n    or_expresion=or_expresion.concat(\"c.fullName='\" + user+ \"'\");\n    if(i+1<unique_ppl.length){\n        or_expression = or_expression.concat(\" or \");\n    }\n})\n//Eliminamos el ultimo OR\n//or_expresion = or_expresion.substring(0, or_expresion.lastIndexOf(\" \"));\n//or_expresion = or_expresion.substring(0, or_expresion.lastIndexOf(\" \"));\n//or_expresion = or_expresion.substring(0, or_expresion.lastIndexOf(\" \"));\n\n\n//Nos traemos todos los resultados de pcr de los miembros de las reuniones\nmsg.query=\"SELECT c.pcr FROM AlexaDevice AS c where \" + or_expresion + \"\";\nmsg.ontology=\"AlexaDevice\";\nmsg.queryType=\"SQL\";\n\nmsg.payload = unique_ppl;\n\nmsg.statusCode = 200;\n\n\nfunction removeItemFromArr ( arr, item ) {\n    var i = arr.indexOf( item );\n    arr.splice( i, 1 );\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":550,"y":280,"wires":[["f04f5bd0.cf8ff8"]]},{"id":"f04f5bd0.cf8ff8","type":"onesaitplatform-query-dynamic","z":"10c28de.2cd9272","name":"query users for PCR","authentication":"YWxleGE6UEVSbllHQnRmYVpzYTgxL01XWGpGbElkQ1FMR0RPalZtZ1A3MXJKcWh3OD06b25lc2FpdHBsYXRmb3JtX2NvbmZpZw==","x":680,"y":340,"wires":[["3ff36c09.b50414"]]},{"id":"3ff36c09.b50414","type":"function","z":"10c28de.2cd9272","name":"is user at risk?","func":"var x\n\ntry{\n    var positives = JSON.parse(msg.payload);\n    \n    //Eliminamos duplicados\n    const uniques = positives.filter((el, index) => positives.indexOf(el) === index);\n    \n    //Comprobamos si hay positivos\n    for (x in uniques){\n        if (uniques[x].value === true){\n            msg.payload='{\"pcr\":true, \"user\":\"'+msg.user+'\"}';\n            break;\n        } else {\n            msg.payload='{\"pcr\":false, \"user\":\"'+msg.user+'\"}';\n        }\n    }\n}catch(error){\n    msg.payload='{\"pcr\":false, \"user\":\"'+msg.user+'\"}';\n}\nreturn msg;","outputs":1,"noerr":0,"x":940,"y":380,"wires":[["cdd192d.76f097"]]}]
